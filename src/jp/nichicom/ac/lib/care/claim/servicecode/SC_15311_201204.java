package jp.nichicom.ac.lib.care.claim.servicecode;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import jp.nichicom.ac.lang.ACCastUtilities;
import jp.nichicom.ac.sql.ACDBManager;
import jp.nichicom.vr.util.VRArrayList;
import jp.nichicom.vr.util.VRList;
import jp.nichicom.vr.util.VRMap;
import jp.or.med.orca.qkan.QkanCommon;

/**
 * âÓåÏó√ó{å^à„ó√é{ê›(ó√ó{ïaè∞ÇóLÇ∑ÇÈïaâ@)
 * 
 * @since V6.0.0
 * @author Masahiko.Higuchi
 * 
 */
public class SC_15311_201204 extends Qkan10011_ServiceUnitGetter {
    private int _1530161 = 0;

    private final String PATH_UNIT_ROOM = "1530115";
    private final String PATH_UNIT_SEMI_ROOM = "1530116";
    private final String PATH_NORMAL_ROOM = "1530117";
    private final String PATH_TASHO_ROOM = "1530118";

    public String getServiceName() {
        return "âÓåÏó√ó{å^à„ó√é{ê›(ó√ó{ïaè∞ÇóLÇ∑ÇÈïaâ@)";
    }

    public String getServiceCodeKind() {
        return "53";
    }

    public String getSystemServiceKindDetail() {
        return "15311";
    }

    public ArrayList<HashMap<String, String>> getSystemServiceCodeItem(
            Map<String, String> map) {
        ArrayList<HashMap<String, String>> sysSvcCdItems = new ArrayList<HashMap<String, String>>();

        // ÉpÉâÉÅÅ[É^íäèo
        // =========================================================================
        // 1530162 é{ê›ãÊï™
        int _1530162 = getIntValue(map, "1530162");

        // 1530102 êlàıîzíuãÊï™
        int _1530102 = getIntValue(map, "1530102", 1);

        // 1530103 ïaé∫ãÊï™(è]óàå^)
        int _1530103 = getIntValue(map, "1530103");

        // 1530104 ïaé∫ãÊï™(ÉÜÉjÉbÉgå^)
        int _1530104 = getIntValue(map, "1530104");

        // ïaé∫ãÊï™
        int byoshitsu = 1;
        switch (_1530162) {
        case 1:
        case 3:
            byoshitsu = convertByoshitsuKbn(_1530103, false);
            break;
        case 2:
        case 4:
            byoshitsu = convertByoshitsuKbn(_1530104, true);
            break;
        }

        // 1 óvâÓåÏìx
        int _1 = convertYokaigodo(getIntValue(map, "1"));

        // 1530163 ñÈä‘ãŒñ±èåèäÓèÄ
        int _1530163 = getIntValue(map, "1530163");

        // 1530158 êlàıå∏éZ
        int _1530158 = getIntValue(map, "1530158");

        // 1530116 ÉÜÉjÉbÉgÉPÉAÇÃêÆîı
        int _1530116 = getIntValue(map, "1530116");

        // 1530168 ó√ó{ä¬ã´å∏éZ
        int _1530168 = getIntValue(map, "1530168");

        // 1530107 à„étÇÃîzíuäÓèÄ
        int _1530107 = getIntValue(map, "1530107");

        // 1530117 êgëÃçSë©îpé~ñ¢é¿é{å∏éZ
        int _1530117 = getIntValue(map, "1530117");

        // 1530108 äOîëâ¡éZ
        int _1530108 = getIntValue(map, "1530108");

        // 1530110 ëºâ»éÛêfâ¡éZ
        int _1530110 = getIntValue(map, "1530110");

        // 1530109 èâä˙â¡éZ
        int _1530109 = getIntValue(map, "1530109");

        // 3020105 ëﬁèäéûéwì±â¡éZ
        int _3020105 = getIntValue(map, "3020105");

        // 3020106 ëﬁèäéûèÓïÒíÒãüâ¡éZ
        int _3020106 = getIntValue(map, "3020106");

        // 3020107 ëﬁèäëOòAågâ¡éZ
        int _3020107 = getIntValue(map, "3020107");

        // 3020108 òVêlñKñ‚ä≈åÏéwé¶â¡éZ
        int _3020108 = getIntValue(map, "3020108");

        // 1530112 âhó{É}ÉlÉWÉÅÉìÉgâ¡éZ
        int _1530112 = getIntValue(map, "1530112");

        // 1530113 åoå˚à⁄çsâ¡éZ
        int _1530113 = getIntValue(map, "1530113");

        // 1530115 åoå˚à€éùâ¡éZ
        int _1530115 = getIntValue(map, "1530115");

        // 1530114 ó√ó{êHâ¡éZ
        int _1530114 = getIntValue(map, "1530114");

        // 1530118 ç›ëÓïúãAéxâáã@î\â¡éZ
        int _1530118 = getIntValue(map, "1530118");

        // 1530159 êHéñíÒãü
        int _1530159 = getIntValue(map, "1530159");

        // 1530161 êHîÔ
        this._1530161 = getIntValue(map, "1530161");

        // 1530119 ééçsìIëﬁâ@ÉTÅ[ÉrÉXîÔ
        int _1530119 = getIntValue(map, "1530119");

        // 1530164 é·îNê´îFímè«ä≥é“éÛì¸â¡éZ
        int _1530164 = getIntValue(map, "1530164");

        // 1530165 å˚çoã@î\à€éùä«óùâ¡éZ
        int _1530165 = getIntValue(map, "1530165");

        // 1530166 îFímè«êÍñÂÉPÉAâ¡éZ
        int _1530166 = getIntValue(map, "1530166");

        // 1530167 ÉTÅ[ÉrÉXíÒãüëÃêßã≠âªâ¡éZ
        int _1530167 = getIntValue(map, "1530167");

        // íPì∆â¡éZ
        int _9 = getIntValue(map, "9");

        // 3020109 ëﬁèä(â@)ëOñKñ‚éwì±â¡éZ
        int _3020109 = getIntValue(map, "3020109", 1);

        // 3020110 ëﬁèä(â@)å„ñKñ‚éwì±â¡éZ
        int _3020110 = getIntValue(map, "3020110", 1);

        // 1530169 îFímè«çsìÆÅEêSóùè«èÛãŸã}ëŒâûâ¡éZ
        int _1530169 = getIntValue(map, "1530169", 1);

        // 1530170 å˚çoã@î\à€éùä«óùëÃêßâ¡éZ
        int _1530170 = getIntValue(map, "1530170", 1);

        // 17 âÓåÏêEàıèàãˆâ¸ëPâ¡éZ
        int _17 = getIntValue(map,
                Qkan10011_ServiceUnitGetter.SYOGUKAIZEN_KASAN, 1);

        // íPì∆â¡éZÇÃÇ›---------------------------------------------------------------
        // íPì∆â¡éZÉTÅ[ÉrÉX
        if (_9 == 2) {

            // ëﬁèä(â@)å„ñKñ‚éwì±â¡éZ
            if (_3020110 > 1) {
                putSystemServiceCodeItem(sysSvcCdItems, "Z2856");
            }

            // âÓåÏêEàıèàãˆâ¸ëPÇï‘ãp
            switch (_17) {
            case 2:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2711");
                break;
            case 3:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2712");
                break;
            case 4:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2713");
                break;
            }

            return sysSvcCdItems;
        }

        // ì∆é©ÉRÅ[Éhê∂ê¨
        // ===========================================================================
        StringBuilder sb = new StringBuilder();

        // é{ê›ãÊï™
        sb.append(CODE_CHAR[_1530162]);

        // êlàıîzíuãÊï™
        sb.append(CODE_CHAR[_1530102]);

        // ïaé∫ãÊï™(è]óàå^å¬é∫/)
        sb.append(CODE_CHAR[_1530103]);

        // ïaé∫ãÊï™(ÉÜÉjÉbÉgå^å¬é∫/ÉÜÉjÉbÉgå^èÄå¬é∫)
        sb.append(CODE_CHAR[_1530104]);

        // óvâÓåÏìx
        sb.append(CODE_CHAR[_1]);

        // ñÈä‘ãŒñ±èåèäÓèÄ
        sb.append(CODE_CHAR[_1530163]);

        // êlàıå∏éZ
        sb.append(CODE_CHAR[_1530158]);

        // ÉÜÉjÉbÉgÉPÉAÇÃêÆîı
        switch (_1530162) {
        case 1: // å¬é∫ÅEëΩè∞é∫
        case 3:
            sb.append(DEFAULT_CHAR);
            break;
        case 2: // ÉÜÉjÉbÉgå^
        case 4:
            // 1-ñ¢êÆîı 2-êÆîı
            if (_1530116 > 1) {
                sb.append(DEFAULT_CHAR);
            } else {
                sb.append(CODE_CHAR[2]);
            }
            break;
        }

        putSystemServiceCodeItem(sysSvcCdItems, sb.toString());

        // â¡éZ
        // ============================================================================
        // ó√ó{ä¬ã´å∏éZ
        switch (_1530168) {
        // ó√ó{å^ó√ó{ä¬ã´å∏éZ
        case 2:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2601");
            break;
        // ó√ó{å^ó√ó{ä¬ã´å∏éZIII
        case 3:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2603");
            break;
        }

        // à„étÇÃîzíuäÓèÄ
        if (_1530107 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2700");
        }

        // Z2704 ó√ó{å^é·îNê´îFímè«éÛì¸â¡éZ
        if (_1530164 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2704");
        }

        // êgëÃçSë©îpé~ñ¢é¿é{å∏éZ
        if (_1530117 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2834");
        }

        // äOîëâ¡éZ
        if (_1530108 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2830");
        }

        // ëºâ»éÛêfâ¡éZ
        if (_1530110 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2831");
        }

        // èâä˙â¡éZ
        if (_1530109 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2840");
        }

        // ëﬁèä(â@)ëOñKñ‚éwì±â¡éZ
        if (_3020109 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2851");
        }

        // ëﬁèä(â@)å„ñKñ‚éwì±â¡éZ
        if (_3020110 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2856");
        }

        // ëﬁèäéûéwì±â¡éZ
        if (_3020105 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2852");
        }

        // ëﬁèäéûèÓïÒíÒãüâ¡éZ
        if (_3020106 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2854");
        }

        // ëﬁèäëOòAågâ¡éZ
        if (_3020107 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2855");
        }

        // òVêlñKñ‚ä≈åÏéwé¶â¡éZ
        if (_3020108 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2853");
        }

        // âhó{É}ÉlÉWÉÅÉìÉgâ¡éZ
        if (_1530112 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2773");
        }

        // åoå˚à⁄çsâ¡éZ
        if (_1530113 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2774");
        }

        // åoå˚à€éùâ¡éZ
        switch (_1530115) {
        case 2:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2780");
            break;
        case 3:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2781");
            break;
        }

        // Z2707 å˚çoã@î\à€éùä«óùëÃêßâ¡éZ
        if (_1530170 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2707");
        }

        // Z2710 ó√ó{å^å˚çoã@î\à€éùä«óùâ¡éZ
        if (_1530165 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2710");
        }

        // ó√ó{êHâ¡éZ
        if (_1530114 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2775");
        }

        // ç›ëÓïúãAéxâáã@î\â¡éZ
        if (_1530118 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2778");
        }

        switch (_1530166) {
        case 2:
            // Z2708 ó√ó{å^îFímè«êÍñÂÉPÉAâ¡éZI
            putSystemServiceCodeItem(sysSvcCdItems, "Z2708");
            break;
        case 3:
            // Z2709 ó√ó{å^îFímè«êÍñÂÉPÉAâ¡éZII
            putSystemServiceCodeItem(sysSvcCdItems, "Z2709");
            break;
        }

        // îFímè«çsìÆÅEêSóùè«èÛãŸã}ëŒâûâ¡éZ
        if (_1530169 > 1) {
            putSystemServiceCodeItem(sysSvcCdItems, "Z2779");
        }

        switch (_1530167) {
        case 2:
            // Z2701 ó√ó{å^ÉTÅ[ÉrÉXíÒãüëÃêßâ¡éZI
            putSystemServiceCodeItem(sysSvcCdItems, "Z2701");
            break;
        case 3:
            // Z2702 ó√ó{å^ÉTÅ[ÉrÉXíÒãüëÃêßâ¡éZII
            putSystemServiceCodeItem(sysSvcCdItems, "Z2702");
            break;
        case 4:
            // Z2703 ó√ó{å^ÉTÅ[ÉrÉXíÒãüëÃêßâ¡éZIII
            putSystemServiceCodeItem(sysSvcCdItems, "Z2703");
            break;
        }

        // âÓåÏêEàıèàãˆâ¸ëPÇï‘ãp
        switch (_17) {
        case 2:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2711");
            break;
        case 3:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2712");
            break;
        case 4:
            putSystemServiceCodeItem(sysSvcCdItems, "Z2713");
            break;
        }

        // ì¡íËì¸èäé“É`ÉFÉbÉNÇ™Ç¬Ç¢ÇƒÇ¢ÇΩèÍçáÇÕå¬é∫ÇÃíPà êîÇí«â¡
        if (!new Integer(1).equals(map.get("7")) && !"1".equals(map.get("7"))) {

            // 2006/07/14 ó√ó{å^ëŒâû
            // ééçsìIëﬁâ@ÉTÅ[ÉrÉXÇÃèÍçáÇÕêHîÔÇéZíË
            if (_1530119 > 1) {
                sysSvcCdItems = new ArrayList<HashMap<String, String>>();
            }

            // êHéñíÒãü
            if (_1530159 > 1) {
                putSystemServiceCodeItem(sysSvcCdItems, SERVICE_CODE_SHOKUHI);
            }

            // äOîëâ¡éZ
            if (_1530108 > 1) {
                sysSvcCdItems = new ArrayList<HashMap<String, String>>();
            }
            // ëÿç›îÔ --------
            putSystemServiceCodeItem(sysSvcCdItems,
                    getSystemServiceCodeOfRoom(byoshitsu));
        }// É`ÉFÉbÉNÇ™Ç¬Ç¢ÇƒÇ¢Ç»Ç¢èÍçáÇÕâΩÇ‡ï‘Ç≥Ç»Ç¢

        // ëºâ»éÛêfÇ™Ç†Ç¡ÇΩèÍçáÇÕàÍó•ëºâ»éÛêMÇÃÉRÅ[ÉhÇï‘Ç∑
        // îOÇÃÇΩÇﬂäOîëÇÊÇËóDêÊÇ∑ÇÈÅB
        if (_1530110 > 1) {
            // ì‡ïîÉTÅ[ÉrÉXÉRÅ[ÉhÇèâä˙âª
            // âhó{É}ÉlÉWÉÅÉìÉgâ¡éZÅEâhó{ä«óùëÃêßâ¡éZÅEêHîÔÅEÉzÉeÉãÉRÉXÉgà»äOÇÕçÌèúÇ∑ÇÈÅB
            for (int i = sysSvcCdItems.size() - 1; i >= 0; i--) {
                Map<String, String> serviceMap = new HashMap<String, String>();
                // ÉåÉRÅ[ÉhéÊìæ
                serviceMap = sysSvcCdItems.get(i);
                // éZíËâ¬î\Ç»ÉåÉRÅ[ÉhÇ≈Ç†ÇÈèÍçáÇÕçÌèúÇµÇ»Ç¢
                // ëºâ»éÛêfâ¡éZéZíËéûÇ…çÌèúëŒè€äOÇ∆Ç∑ÇÈâ¡éZÇ…ÅAåoå˚à⁄çsâ¡éZÅEó√ó{êHâ¡éZÅEåoå˚à€éùâ¡éZÇí«â¡Ç∑ÇÈÅB
                String tempItem = ACCastUtilities.toString(
                        serviceMap.get("SYSTEM_SERVICE_CODE_ITEM"), "");
                if (!"Z2773".equals(tempItem) && !"Z2771".equals(tempItem)
                        && !"Z2772".equals(tempItem)
                        && !SERVICE_CODE_SHOKUHI.equals(tempItem)
                        && !SERVICE_CODE_NORMAL_ROOM.equals(tempItem)
                        && !SERVICE_CODE_TASHO_ROOM.equals(tempItem)
                        && !SERVICE_CODE_UNIT_ROOM.equals(tempItem)
                        && !SERVICE_CODE_UNIT_SEMI_ROOM.equals(tempItem)
                        && !"Z2774".equals(tempItem)
                        && !"Z2775".equals(tempItem)
                        && !"Z2780".equals(tempItem)
                        && !"Z2781".equals(tempItem)) {
                    sysSvcCdItems.remove(i);
                }
            }

            // ëºâ»éÛêfÇ…Ç†ÇΩÇÈÉTÅ[ÉrÉXÉRÅ[ÉhÇí«â¡
            putSystemServiceCodeItem(sysSvcCdItems, "Z2831");

            // âÓåÏêEàıèàãˆâ¸ëPÇï‘ãp
            switch (_17) {
            case 2:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2711");
                break;
            case 3:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2712");
                break;
            case 4:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2713");
                break;
            }

            // ílÇï‘Ç∑
            return sysSvcCdItems;

        }

        // äOîëÇ™Ç†ÇËÇæÇ¡ÇΩèÍçáÇÕàÍó•äOîëÇÃÉRÅ[ÉhÇï‘Ç∑
        if (_1530108 > 1) {
            // ì¡íËì¸èäé“Ç≈Ç†ÇÈèÍçáÇÕÉzÉeÉãÉRÉXÉgÇí«â¡Ç∑ÇÈ
            if (new Integer(1).equals(map.get("7")) || "1".equals(map.get("7"))) {
                // ì‡ïîÉTÅ[ÉrÉXÉRÅ[ÉhÇèâä˙âª
                sysSvcCdItems = new ArrayList<HashMap<String, String>>();
            }
            // äOîëÇ…Ç†ÇΩÇÈÉTÅ[ÉrÉXÉRÅ[ÉhÇí«â¡
            putSystemServiceCodeItem(sysSvcCdItems, "Z2830");

            // âÓåÏêEàıèàãˆâ¸ëPÇï‘ãp
            switch (_17) {
            case 2:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2711");
                break;
            case 3:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2712");
                break;
            case 4:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2713");
                break;
            }

            // ílÇï‘Ç∑
            return sysSvcCdItems;
        }

        // 2006/07/05 ó√ó{å^ëŒâû
        // 1530119 ééçsìIëﬁâ@ÉTÅ[ÉrÉXîÔ
        // ééçsìIëﬁâ@Ç™Ç†ÇËÇæÇ¡ÇΩèÍçáÇÕàÍó•ééçsìIëﬁâ@ÇÃÉRÅ[ÉhÇï‘Ç∑
        if (_1530119 > 1) {
            // ì¡íËì¸èäé“Ç≈Ç†ÇÈèÍçáÇÕèâä˙âªÇçsÇÌÇ»Ç¢Å@Å¶ëÿç›îÔÇï‘Ç∑ïKóvÇ™Ç†ÇÈÇΩÇﬂ
            if ("1".equals(map.get("7")) || new Integer(1).equals(map.get("7"))) {
                // ì‡ïîÉTÅ[ÉrÉXÉRÅ[ÉhÇèâä˙âª
                sysSvcCdItems = new ArrayList<HashMap<String, String>>();
            }
            // ééçsìIëﬁâ@Ç…Ç†ÇΩÇÈÉRÅ[ÉhÇí«â¡
            putSystemServiceCodeItem(sysSvcCdItems, "Z5258");

            // âÓåÏêEàıèàãˆâ¸ëPÇï‘ãp
            switch (_17) {
            case 2:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2711");
                break;
            case 3:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2712");
                break;
            case 4:
                putSystemServiceCodeItem(sysSvcCdItems, "Z2713");
                break;
            }
        }

        return sysSvcCdItems;
    }

    public ArrayList<VRMap> getServiceCode(Map<String, String> map,
            ACDBManager dbm) {
        ArrayList<VRMap> al = super.getServiceCode(map, dbm);
        Map<String, Integer> mp = null;
        // ì¡íËì¸èäé“É`ÉFÉbÉNÇ™Ç¬Ç¢ÇƒÇ»Ç©Ç¡ÇΩèÍçáÇÕêHîÔÇè„èëÇ´ÇπÇ∏Ç…ï‘Ç∑
        //[ID:0000749][Shin Fujihara] 2012/10 edit begin 2012îNìxëŒâû ì¡íËì¸èäé“ÇÃóöóä«óùã@î\
//        if (new Integer(1).equals(map.get("7")) || "1".equals(map.get("7"))) {
//            // êHîÔÇÕïKóvÇ»Ç¢ÇΩÇﬂÉfÅ[É^Çè¡Ç∑
//            return al;
//        }
        if (ACCastUtilities.toInt(map.get("7"), 1) != 2) {
        	//êHîÔÇÕïKóvÇ»Ç¢ÇΩÇﬂÉfÅ[É^Çè¡Ç∑
        	return al;
        }
        //[ID:0000749][Shin Fujihara] 2012/10 edit end 2012îNìxëŒâû ì¡íËì¸èäé“ÇÃóöóä«óùã@î\

        // éñã∆èäèÓïÒÇÃéÊìæ
        VRList temp = new VRArrayList();

        try {
            temp = QkanCommon.getProviderServiceDetail(dbm,
                    ACCastUtilities.toString(map.get("PROVIDER_ID")),
                    ACCastUtilities.toInt(getSystemServiceKindDetail(), 0));
        } catch (Exception e) {
            return al;
        }

        VRMap providerInfo = (VRMap) temp.get(0);

        for (int i = 0; i < al.size(); i++) {
            mp = (Map<String, Integer>) al.get(i);

            String val = ACCastUtilities.toString(
                    mp.get("SYSTEM_SERVICE_CODE_ITEM"), "");
            if (SERVICE_CODE_SHOKUHI.equals(val)) {
                // êHîÔÇÃÉåÉRÅ[Éh
                if (this._1530161 <= 0) {
                    // êHîÔÇ™0â~à»â∫ÇÃèÍçá
                    // äYìñÉåÉRÅ[ÉhÇçÌèúÇ∑ÇÈÅB
                    al.remove(i);
                    // çÌèúÇµÇΩÇΩÇﬂÉCÉìÉfÉbÉNÉXÇ1Ç¬ñﬂÇ∑ÅB
                    i--;
                } else {
                    // êHîÔÇ™0â~à»â∫Ç≈Ç»Ç¢èÍçá
                    // êHîÔÇã∆ñ±Ç©ÇÁìnÇ≥ÇÍÇΩílÇ≈è„èëÇ´Ç∑ÇÈÅB
                    mp.put("SERVICE_UNIT", new Integer(this._1530161));
                }
            } else if (SERVICE_CODE_UNIT_ROOM.equals(val)) {
                // ÉÜÉjÉbÉgå^å¬é∫ÇÃÉåÉRÅ[Éh
                // îÔópíPâøÇ™0à»â∫Ç≈ê›íËÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÅAñﬂÇËílÇ©ÇÁçÌèú
                // ÉÜÉjÉbÉgå^å¬é∫ÇÃîÔópíPâøÇéÊìæ
                int unitRoom = ACCastUtilities.toInt(
                        providerInfo.get(this.PATH_UNIT_ROOM), 0);
                if (unitRoom <= 0) {
                    // äYìñÉåÉRÅ[ÉhÇçÌèúÇ∑ÇÈÅB
                    al.remove(i);
                    // çÌèúÇµÇΩÇΩÇﬂÉCÉìÉfÉbÉNÉXÇ1Ç¬ñﬂÇ∑ÅB
                    i--;
                }
            } else if (SERVICE_CODE_UNIT_SEMI_ROOM.equals(val)) {
                // ÉÜÉjÉbÉgå^èÄå¬é∫ÇÃÉåÉRÅ[Éh
                // îÔópíPâøÇ™0à»â∫Ç≈ê›íËÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÅAñﬂÇËílÇ©ÇÁçÌèú
                // ÉÜÉjÉbÉgå^èÄå¬é∫ÇÃîÔópíPâøÇéÊìæ
                int unitSemiRoom = ACCastUtilities.toInt(
                        providerInfo.get(this.PATH_UNIT_SEMI_ROOM), 0);
                if (unitSemiRoom <= 0) {
                    // äYìñÉåÉRÅ[ÉhÇçÌèúÇ∑ÇÈÅB
                    al.remove(i);
                    // çÌèúÇµÇΩÇΩÇﬂÉCÉìÉfÉbÉNÉXÇ1Ç¬ñﬂÇ∑ÅB
                    i--;
                }
            } else if (SERVICE_CODE_NORMAL_ROOM.equals(val)) {
                // è]óàå^å¬é∫ÇÃÉåÉRÅ[Éh
                // îÔópíPâøÇ™0à»â∫Ç≈ê›íËÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÅAñﬂÇËílÇ©ÇÁçÌèú
                // è]óàå^å¬é∫ÇÃîÔópíPâøÇéÊìæ
                int normalRoom = ACCastUtilities.toInt(
                        providerInfo.get(this.PATH_NORMAL_ROOM), 0);
                if (normalRoom <= 0) {
                    // äYìñÉåÉRÅ[ÉhÇçÌèúÇ∑ÇÈÅB
                    al.remove(i);
                    // çÌèúÇµÇΩÇΩÇﬂÉCÉìÉfÉbÉNÉXÇ1Ç¬ñﬂÇ∑ÅB
                    i--;
                }
            } else if (SERVICE_CODE_TASHO_ROOM.equals(val)) {
                // ëΩè∞é∫ÇÃÉåÉRÅ[Éh
                // îÔópíPâøÇ™0à»â∫Ç≈ê›íËÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÅAñﬂÇËílÇ©ÇÁçÌèú
                // ëΩè∞é∫ÇÃîÔópíPâøÇéÊìæ
                int tashoRoom = ACCastUtilities.toInt(
                        providerInfo.get(this.PATH_TASHO_ROOM), 0);
                if (tashoRoom <= 0) {
                    // äYìñÉåÉRÅ[ÉhÇçÌèúÇ∑ÇÈÅB
                    al.remove(i);
                    // çÌèúÇµÇΩÇΩÇﬂÉCÉìÉfÉbÉNÉXÇ1Ç¬ñﬂÇ∑ÅB
                    i--;
                }
            }
        }

        return al;
    }
}
